@using Microsoft.AspNetCore.Identity
@using MyGymWeb.Data.Models;
@using MyGymWeb.Services.Admin
@using MyGymWeb.Infrastructure.Extensions
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IUserService users
@using Microsoft.AspNetCore.Http;
@inject UserManager<ApplicationUser> userManager;
@inject IHttpContextAccessor _context;


@{
    
    var user = await userManager.GetUserAsync(_context?.HttpContext?.User);
}


<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link" asp-controller="User" asp-action="Cart"><i>My Cart</i></a>
        </li>      
        if (!string.IsNullOrEmpty(user.Email))
        {
             if (!User.IsInRole("Administrator"))
            {
            <li class="nav-item">
                <a class="nav-link"><i>Balance: <e class="text-primary">@user.Amount</e> $</i></a>
            </li>
            }      
        }         
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-black"><i class="logout">Sign Out</i></button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="User" asp-action="Register"><i style="color: black">Sign Up</i></a>
    </li>
    <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="User" asp-action="Login"><i style="color: black">Sign In</i></a>
    </li>
    }
</ul>

