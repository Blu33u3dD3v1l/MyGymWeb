@model AllTrainersQueryModel


@{
    ViewBag.Title = "All Houses";
    var currentString = "";
}
<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<div class="SearchTable">
    <form method="get">
        <div class="row">
            @* <div class="form-group col-md-3 d-flex justify-content-between">
            <div class="form-group">
            <label asp-for="Category"></label>
            <select asp-for="Category" class="form-control">
            <option value="">All</option>
            @foreach (var category in Model.Categories)
            {
            <option value="@category">@category</option>
            }
            </select>
            </div>
            </div>*@
            <div class="form-group col-md-3">
                <label asp-for="SeachString" style="color:white"><i>Search By Name</i></label>
                <input asp-for="SeachString" class="form-control" placeholder="...">
            </div>
            <div class="form-group col-md-3">
                <div class="form-group">
                    <label asp-for="TrainerSorting" style="color:white"><i>Sorting by</i></label>
                    <select asp-for="TrainerSorting" class="form-control">  
                        <option value="0">Price</option>

                       @currentString = @Model.TrainerSorting

                    </select>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="form-group mt-4 p-2">
                    <input type="submit" value="Search" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </form>
   
    @{
        var previousPage = Model.CurrentPage - 1;
        if (previousPage < 1)
        {
            previousPage = 1;
        }
        int maxPage = (int)Math.Ceiling((double)Model.TotalTrainers /
        Model.TrainersPerPage);

    }
    <div class="row mb-5">
        <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
            <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" :
string.Empty)"
               asp-controller="Trainer"
               asp-action="Search"
               asp-route-currentPage="@previousPage"
               asp-route-searchTerm="@Model.SeachString"
               asp-route-sorting="@((int)Model.TrainerSorting)"><<</a>
        </div>
        @{
            var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
            !Model.Trainers.Any();
        }
        <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
            <a class="btn btn-primary
 @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
               asp-controller="Trainer"
               asp-action="Search"
               asp-route-searchTerm="@Model.SeachString"
               asp-route-currentPage="@(Model.CurrentPage + 1)"               
               asp-route-sorting="@((int)Model.TrainerSorting)">>></a>
        </div>
    </div>
    @if (!Model.Trainers.Any())
    {
         <div class="searchNoTrainers">
             
            <h2 style="color:white" class="text-center">No trainers found by the given criteria!</h2>

             </div>
        
    }
    <div class="row">
        @foreach (var trainer in Model.Trainers)
        {
            <partial name="_TrainerPartial" model="@trainer" />
        }
    </div>

</div>
